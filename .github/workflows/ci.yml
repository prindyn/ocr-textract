name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/easyocr:latest .

      - name: Run tests in Docker
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: |
          docker run --rm \
            -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
            -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
            ghcr.io/${{ github.repository }}/easyocr:latest pipenv run pytest

      - name: Build and push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/easyocr:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Ensure Docker is installed on remote server
        env:
          DO_SSH_KEY: ${{ secrets.DO_SSH_KEY }}
          DO_SERVER_IP: ${{ vars.DO_SERVER_IP }}
        run: |
          echo -e "$DO_SSH_KEY" > do_ssh_key.key
          chmod 600 do_ssh_key.key

          ssh -i do_ssh_key.key -o StrictHostKeyChecking=no root@$DO_SERVER_IP <<EOF
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing Docker..."
              apt-get update && apt-get install -y docker.io
              systemctl start docker
              systemctl enable docker
            else
              echo "Docker is already installed."
            fi
          EOF

          rm -rf do_ssh_key.key

      - name: Deploy to DigitalOcean
        env:
          DO_SSH_KEY: ${{ secrets.DO_SSH_KEY }}
          DO_SERVER_IP: ${{ vars.DO_SERVER_IP }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: |
          echo -e "$DO_SSH_KEY" > do_ssh_key.key
          chmod 600 do_ssh_key.key

          ssh -i do_ssh_key.key -o StrictHostKeyChecking=no root@$DO_SERVER_IP <<EOF
            echo "${GHCR_TOKEN}" | docker login ghcr.io -u ${GITHUB_ACTOR} --password-stdin

            docker stop easyocr || true
            docker rm easyocr || true
            
            docker pull ghcr.io/${{ github.repository }}/easyocr:latest

            # Run the Docker container
            docker run -d --name easyocr -p 80:8000 --restart always \
              -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
              -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
              -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
              ghcr.io/${{ github.repository }}/easyocr:latest
          EOF

          rm -f do_ssh_key.key
